1. dotnet --list-sdks
2. dotnet --version
3. dotnet new globaljson --sdk-version 3.1.408
4. dotnet --version
====================================
Nuget packages
1. dotnet add package microsoft.entityframeworkcore --version 3.1.20
2. dotnet add package microsoft.entityframeworkcore.sqlserver --version 3.1.20
3. dotnet add package microsoft.entityframeworkcore.tools --version 3.1.20
4. dotnet add package microsoft.entityframeworkcore.design --version 3.1.20
5. dotnet add package microsoft.aspnetcore.mvc.newtonsoftjson --version 3.1.20
6. dotnet add package microsoft.aspnetcore.authentication.jwtbearer --version 3.1.20
7. dotnet add package Microsoft.AspNetCore.Identity.EntityFrameworkCore --version 3.1.20
====================================================================================
Migration
ApplicationDbContext
1. dotnet ef migrations add "identity_0" -c ApplicationDbContext -o "Migrations/Identity"
2. dotnet ef database update -c ApplicationDbContext
HRDbContext
1. dotnet ef migrations add "hr_0" -c HRDbContext  -o "Migrations/Data"
[Upto SalaryStructure]
2. dotnet ef database update -c HRDbContext -o "Migrations/Data"
=====================================================================
if you download from GitHub
===============================

For CRUD operation 
Server
1. Create API controller
2. Test the Api using Postman
Client
1. Write the madding class
2. Create a service for accessing data from Api
3. Add the service provider in appmodule
4. Write methods in Service
5. Generate componets to view, create and edit
6. Add routes for components
7. Write html & code for components

in ClientApp, run => npm i